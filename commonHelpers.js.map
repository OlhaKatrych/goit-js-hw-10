{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport izitoast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst btn = document.querySelector('button');\nconst container = document.querySelector('.timer');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds');\n\nlet userSelectedDate = [];\nbtn.disabled = true;\n\nbtn.addEventListener('click', handlerClicker);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    selectedDates.forEach(element => {\n      if (options.defaultDate > element) {\n        izitoast.error({\n          message: 'Please choose a date in the future',\n          position: 'topRight',\n        });\n      } else {\n        btn.disabled = false;\n      }\n      userSelectedDate.push(element);\n    });\n  },\n};\n\nconst libFlatPickr = flatpickr('#datetime-picker', options);\nconst diff = userSelectedDate - options.defaultDate;\n\nfunction handlerClicker(e) {\n  e.target.disabled = true;\n  const objConvert = convertMs(diff);\n\n  days.innerHTML = objConvert.days;\n  hours.innerHTML = objConvert.hours;\n  minutes.innerHTML = objConvert.minutes;\n  seconds.innerHTML = objConvert.seconds;\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["btn","days","hours","minutes","seconds","userSelectedDate","handlerClicker","options","selectedDates","element","izitoast","flatpickr","diff","objConvert","convertMs","ms"],"mappings":"sGAMc,SAAS,cAAc,kBAAkB,EACvD,MAAMA,EAAM,SAAS,cAAc,QAAQ,EACzB,SAAS,cAAc,QAAQ,EACjD,MAAMC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,eAAe,EAEtD,IAAIC,EAAmB,CAAA,EACvBL,EAAI,SAAW,GAEfA,EAAI,iBAAiB,QAASM,CAAc,EAE5C,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EAC5BA,EAAc,QAAQC,GAAW,CAC3BF,EAAQ,YAAcE,EACxBC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UACpB,CAAS,EAEDV,EAAI,SAAW,GAEjBK,EAAiB,KAAKI,CAAO,CACnC,CAAK,CACF,CACH,EAEqBE,EAAU,mBAAoBJ,CAAO,EAC1D,MAAMK,EAAOP,EAAmBE,EAAQ,YAExC,SAASD,EAAe,EAAG,CACzB,EAAE,OAAO,SAAW,GACpB,MAAMO,EAAaC,EAAUF,CAAI,EAEjCX,EAAK,UAAYY,EAAW,KAC5BX,EAAM,UAAYW,EAAW,MAC7BV,EAAQ,UAAYU,EAAW,QAC/BT,EAAQ,UAAYS,EAAW,OACjC,CAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMd,EAAO,KAAK,MAAMc,EAAK,KAAG,EAE1Bb,EAAQ,KAAK,MAAOa,EAAK,MAAO,IAAI,EAEpCZ,EAAU,KAAK,MAAQY,EAAK,MAAO,KAAQ,GAAM,EAEjDX,EAAU,KAAK,MAASW,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAd,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}