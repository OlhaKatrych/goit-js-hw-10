{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport izitoast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('button');\nconst input = document.querySelector('#datetime-picker');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nstartButton.disabled = true;\n\nstartButton.addEventListener('click', startTimer);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n\n    userSelectedDate = selectedDates[0];\n    if (options.defaultDate > userSelectedDate) {\n      izitoast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nconst libFlatPickr = flatpickr('#datetime-picker', options);\n\nfunction startTimer(e) {\n  e.target.disabled = true;\n  input.disabled = true;\n  if (options.enableTime) {\n    const timerID = setInterval(() => {\n      const currentTime = Date.now();\n      let diff = userSelectedDate - currentTime;\n      const objConvert = convertMs(diff);\n      days.innerHTML = addLeadingZero(objConvert.days);\n      hours.innerHTML = addLeadingZero(objConvert.hours);\n      minutes.innerHTML = addLeadingZero(objConvert.minutes);\n      seconds.innerHTML = addLeadingZero(objConvert.seconds);\n      if (diff < 1000) {\n        clearInterval(timerID);\n      }\n    }, 1000);\n  }\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["startButton","input","days","hours","minutes","seconds","userSelectedDate","startTimer","options","selectedDates","izitoast","flatpickr","timerID","currentTime","diff","objConvert","convertMs","addLeadingZero","value","ms"],"mappings":"sGAMA,MAAMA,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvD,IAAIC,EACJN,EAAY,SAAW,GAEvBA,EAAY,iBAAiB,QAASO,CAAU,EAEhD,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EAE5BH,EAAmBG,EAAc,GAC7BD,EAAQ,YAAcF,GACxBI,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EAEDV,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEqBW,EAAU,mBAAoBH,CAAO,EAE1D,SAASD,EAAW,EAAG,CAGrB,GAFA,EAAE,OAAO,SAAW,GACpBN,EAAM,SAAW,GACbO,EAAQ,WAAY,CACtB,MAAMI,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAc,KAAK,MACzB,IAAIC,EAAOR,EAAmBO,EAC9B,MAAME,EAAaC,EAAUF,CAAI,EACjCZ,EAAK,UAAYe,EAAeF,EAAW,IAAI,EAC/CZ,EAAM,UAAYc,EAAeF,EAAW,KAAK,EACjDX,EAAQ,UAAYa,EAAeF,EAAW,OAAO,EACrDV,EAAQ,UAAYY,EAAeF,EAAW,OAAO,EACjDD,EAAO,KACT,cAAcF,CAAO,CAExB,EAAE,GAAI,CACR,CACH,CAEA,SAASK,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAQrB,MAAMjB,EAAO,KAAK,MAAMiB,EAAK,KAAG,EAE1BhB,EAAQ,KAAK,MAAOgB,EAAK,MAAO,IAAI,EAEpCf,EAAU,KAAK,MAAQe,EAAK,MAAO,KAAQ,GAAM,EAEjDd,EAAU,KAAK,MAASc,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAjB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}