{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport izitoast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst btn = document.querySelector('button');\nconst container = document.querySelector('.timer');\nlet userSelectedDate = [];\nbtn.disabled = true;\n\nbtn.addEventListener('click', handlerClicker);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    selectedDates.forEach(element => {\n      console.log(element);\n      if (options.defaultDate > element) {\n        izitoast.error({\n          message: 'Please choose a date in the future',\n          position: 'topRight',\n        });\n      } else {\n        btn.disabled = false;\n      }\n      userSelectedDate.push(element);\n      console.log(userSelectedDate);\n    });\n  },\n};\n\nconst libFlatPickr = flatpickr('#datetime-picker', options);\n\nconst arr = [...container.children];\nlet element;\nfor (let item of arr) {\n  element = item;\n}\nconst schedule = {\n  days: Number(element.children[0].textContent),\n  hours: Number(element.children[0].textContent),\n  minutes: Number(element.children[0].textContent),\n  seconds: Number(element.children[0].textContent),\n};\n\nconst diff = userSelectedDate - options.defaultDate;\nfunction handlerClicker(e) {\n  e.target.disabled = true;\n  convertMs(diff);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n\n}\n\n//console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n//console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n//console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["btn","container","userSelectedDate","handlerClicker","options","selectedDates","element","izitoast","flatpickr","arr","item"],"mappings":"2GAMc,SAAS,cAAc,kBAAkB,EACvD,MAAMA,EAAM,SAAS,cAAc,QAAQ,EACrCC,EAAY,SAAS,cAAc,QAAQ,EACjD,IAAIC,EAAmB,CAAA,EACvBF,EAAI,SAAW,GAEfA,EAAI,iBAAiB,QAASG,CAAc,EAE5C,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EAC5BA,EAAc,QAAQC,GAAW,CAC/B,QAAQ,IAAIA,CAAO,EACfF,EAAQ,YAAcE,EACxBC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UACpB,CAAS,EAEDP,EAAI,SAAW,GAEjBE,EAAiB,KAAKI,CAAO,EAC7B,QAAQ,IAAIJ,CAAgB,CAClC,CAAK,CACF,CACH,EAEqBM,EAAU,mBAAoBJ,CAAO,EAE1D,MAAMK,EAAM,CAAC,GAAGR,EAAU,QAAQ,EAClC,IAAIK,EACJ,QAASI,KAAQD,EACfH,EAAUI,EAGJ,OAAOJ,EAAQ,SAAS,GAAG,WAAW,EACrC,OAAOA,EAAQ,SAAS,GAAG,WAAW,EACpC,OAAOA,EAAQ,SAAS,GAAG,WAAW,EACtC,OAAOA,EAAQ,SAAS,GAAG,WAAW,EAGpCJ,EAAmBE,EAAQ,YACxC,SAASD,EAAe,EAAG,CACzB,EAAE,OAAO,SAAW,EAEtB"}